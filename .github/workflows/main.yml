name: OpenWrt Core Build

on:
  workflow_call:
    inputs:
      chip:
        required: true
      branch:
        required: true
      config:
        required: true

jobs:
  base-build:
    runs-on: ubuntu-22.04
    outputs:
      cache-key: ${{ steps.cache-key.outputs.key }}
      base-path: ${{ steps.cache-key.outputs.path }}
    steps:
      - name: 🛠️ 设置环境
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 📥 检出代码
        uses: actions/checkout@v4

      - name: 🔑 生成缓存键
        id: cache-key
        run: |
          KEY="base-${{ inputs.chip }}-${{ inputs.branch }}-${{ hashFiles('.github/configs/base_*.config') }}"
          echo "key=$KEY" >> $GITHUB_OUTPUT
          echo "path=base-$KEY" >> $GITHUB_OUTPUT

      - name: 📦 恢复基础环境缓存
        uses: actions/cache@v4
        id: cache
        with:
          path: ${{ steps.cache-key.outputs.path }}
          key: ${{ steps.cache-key.outputs.key }}

      - name: 🌱 准备基础环境
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p ${{ steps.cache-key.outputs.path }}
          docker run --rm \
            -v $(pwd):/work \
            -w /work \
            openwrt/org:ubuntu-22.04 \
            bash -c "
              ./scripts/prepare-env.sh ${{ inputs.chip }} ${{ inputs.branch }}
              make defconfig
              make -j$(nproc) IGNORE_ERRORS=1
              tar -czf ${{ steps.cache-key.outputs.path }}/base.tar.gz .
            "

  final-build:
    needs: base-build
    runs-on: ubuntu-22.04
    steps:
      - name: 📥 检出代码
        uses: actions/checkout@v4

      - name: 📦 恢复基础环境
        run: |
          mkdir -p base
          tar -xzf ${{ needs.base-build.outputs.base-path }}/base.tar.gz -C base

      - name: 🔧 合并配置文件
        run: |
          ./scripts/merge-config.sh \
            base/.config \
            .github/configs/${{ inputs.config }}.config \
            .config

      - name: 🧪 检查软件包
        run: |
          ./scripts/package-check.sh .config

      - name: 🚀 编译固件
        run: |
          docker run --rm \
            -v $(pwd):/work \
            -w /work/base \
            openwrt/org:ubuntu-22.04 \
            bash -c "
              cp ../.config .config
              make defconfig
              make -j$(nproc) IGNORE_ERRORS=1
            "

      - name: 📦 收集产物
        run: |
          mkdir -p packages
          find base/bin/targets -name "*.bin" -exec cp {} ./ \;
          find base/bin/targets -name "*.manifest" -exec cp {} ./ \;
          find base/bin/targets -name "config.buildinfo" -exec cp {} ./ \;
          cp base/.config .config
          cp -r base/bin/packages packages/

      - name: 📤 上传产物
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.chip }}-${{ inputs.branch }}-${{ inputs.config }}-${{ github.run_id }}
          path: |
            *.bin
            *.config
            *.manifest
            config.buildinfo
            packages/
          retention-days: 7
