# 清理工作流 - 定期清理旧的Release和Artifacts
# 作者: Mary
# 最后更新: 2024-01-XX

name: 清理旧版本

# 触发条件
on:
  # 定时触发：每月1号凌晨2点
  schedule:
    - cron: '0 2 1 * *'
  # 手动触发
  workflow_dispatch:

# 权限设置
permissions:
  contents: write  # 删除Release需要写权限
  actions: read   # 读取Artifacts需要读权限

# 任务定义
jobs:
  # 清理任务
  cleanup:
    name: 清理旧版本
    runs-on: ubuntu-latest
    steps:
      # 检出代码
      - name: 检出代码
        uses: actions/checkout@v4

      # 设置环境变量
      - name: 设置环境变量
        run: |
          # 设置保留版本数量
          echo "KEEP_RELEASES=7" >> $GITHUB_ENV
          # 设置保留天数
          echo "KEEP_DAYS=30" >> $GITHUB_ENV

      # 清理旧的Releases
      - name: 清理旧的Releases
        run: |
          echo "🧹 开始清理旧的Releases..."
          
          # 安装gh cli
          sudo apt-get update
          sudo apt-get install -y gh
          
          # 登录gh cli
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          
          # 获取所有Releases
          echo "📋 获取Release列表..."
          gh release list --repo ${{ github.repository }} --limit 50 --json tagName,createdAt | \
            jq -r --arg keep ${{ env.KEEP_RELEASES }} \
            '. | sort_by(.createdAt) | reverse | .[$keep | tonumber:] | .tagName' | \
            while read -r tag; do
              if [ -n "$tag" ]; then
                echo "🗑️ 删除Release: $tag"
                gh release delete "$tag" --repo ${{ github.repository }} --yes || true
              fi
            done
          
          echo "✅ Release清理完成"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 清理旧的Artifacts
      - name: 清理旧的Artifacts
        run: |
          echo "🧹 开始清理旧的Artifacts..."
          
          # 安装gh cli
          sudo apt-get install -y gh jq
          
          # 登录gh cli
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          
          # 获取所有Artifacts
          echo "📋 获取Artifact列表..."
          gh api repos/:owner/:repo/actions/artifacts --jq '.artifacts[] | select(.created_at < (now - (${{ env.KEEP_DAYS }} | tonumber) * 24 * 3600 | strftime("%Y-%m-%dT%H:%M:%SZ")))' | \
            jq -r '.id' | \
            while read -r id; do
              if [ -n "$id" ]; then
                echo "🗑️ 删除Artifact: $id"
                gh api --method DELETE repos/:owner/:repo/actions/artifacts/$id || true
              fi
            done
          
          echo "✅ Artifact清理完成"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 清理工作流运行记录
      - name: 清理工作流运行记录
        run: |
          echo "🧹 开始清理工作流运行记录..."
          
          # 安装gh cli
          sudo apt-get install -y gh jq
          
          # 登录gh cli
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          
          # 获取所有工作流运行记录
          echo "📋 获取工作流运行记录..."
          gh api repos/:owner/:repo/actions/runs --jq '.workflow_runs[] | select(.created_at < (now - (${{ env.KEEP_DAYS }} | tonumber) * 24 * 3600 | strftime("%Y-%m-%dT%H:%M:%SZ")))' | \
            jq -r '.id' | \
            while read -r id; do
              if [ -n "$id" ]; then
                echo "🗑️ 删除工作流运行记录: $id"
                gh api --method DELETE repos/:owner/:repo/actions/runs/$id || true
              fi
            done
          
          echo "✅ 工作流运行记录清理完成"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 生成清理报告
      - name: 生成清理报告
        run: |
          echo "📊 生成清理报告..."
          
          # 创建报告
          {
            echo "# 清理报告"
            echo "清理时间: $(date)"
            echo "保留Release数量: ${{ env.KEEP_RELEASES }}"
            echo "保留天数: ${{ env.KEEP_DAYS }}"
            echo ""
            echo "## 清理结果"
            echo "- 旧的Releases已删除"
            echo "- 旧的Artifacts已删除"
            echo "- 旧的工作流运行记录已删除"
            echo ""
            echo "## 当前状态"
            echo "- Release数量: $(gh release list --repo ${{ github.repository }} --limit 100 | wc -l)"
            echo "- Artifact数量: $(gh api repos/:owner/:repo/actions/artifacts --jq '.total_count')"
          } > cleanup_report.md
          
          echo "✅ 清理报告已生成"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 上传清理报告
      - name: 上传清理报告
        uses: actions/upload-artifact@v3
        with:
          name: cleanup-report
          path: cleanup_report.md
          retention-days: 7
