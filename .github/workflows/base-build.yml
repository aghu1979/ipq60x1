# .github/workflows/base-build.yml

name: ⚙️ Base Build

on:
  workflow_dispatch:
    inputs:
      config:
        description: '选择配置文件'
        required: true
        default: 'libwrt'
        type: choice
        options:
        - libwrt
      ssh:
        description: 'SSH连接到Actions'
        required: false
        default: 'false'
        type: boolean
  push:
    branches:
      - main
    paths:
      - '.github/workflows/base-build.yml'
      - 'scripts/**'
      - 'config/**'

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: ${{ github.event.inputs.config || 'libwrt' }}
  DIY_P1_SH: scripts/diy.sh
  DIY_P2_SH: scripts/config-manager.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: false
  TZ: Asia/Shanghai
  PRODUCT_NAME: OpenWrt
  FIRMWARE_NAME: ${{ github.event.inputs.config || 'libwrt' }}

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        echo "COMPILE_STARTINGTIME=$(date +"%Y.%m.%d.%H%M")" >> $GITHUB_ENV

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        echo "OPENWRT_ROOT=$PWD" >> $GITHUB_ENV

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && cp $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && cp $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: 📊 Generate Base System Report
      id: report
      run: |
        echo "🔍 开始生成基础系统报告..."
        mkdir -p $GITHUB_WORKSPACE/upload-reports
        chmod +x $GITHUB_WORKSPACE/scripts/package-check.sh
        chmod +x $GITHUB_WORKSPACE/scripts/compare-packages.sh
        cd openwrt
        $GITHUB_WORKSPACE/scripts/package-check.sh
        $GITHUB_WORKSPACE/scripts/compare-packages.sh
        echo "✅ 报告生成完成"
        echo "📋 报告目录内容:"
        ls -l $GITHUB_WORKSPACE/upload-reports/

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload base environment cache
      uses: actions/cache@v3
      with:
        path: /workdir/openwrt
        key: ${{ env.CONFIG_FILE }}-ipq60xx-${{ env.FIRMWARE_NAME }}-${{ github.run_id }}
        restore-keys: |
          ${{ env.CONFIG_FILE }}-ipq60xx-${{ env.FIRMWARE_NAME }}-

    - name: Set base cache key for final build
      id: cache_key
      run: |
        BASE_CACHE_KEY="${CONFIG_FILE}-ipq60xx-${FIRMWARE_NAME}-${{ github.run_id }}"
        echo "base_cache_key=$BASE_CACHE_KEY" >> $GITHUB_OUTPUT
        echo "📌 生成的缓存键: $BASE_CACHE_KEY"

    - name: Upload base system report
      uses: actions/upload-artifact@v3
      with:
        name: base-reports-${{ env.CONFIG_FILE }}-${{ env.FIRMWARE_NAME }}
        path: upload-reports/
        retention-days: 30
      if: always()

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware directory
      uses: actions/upload-artifact@v3
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
